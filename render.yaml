# Render Deployment Configuration for InferenceMD
# Defines the services needed to run the application on Render.
# Documentation: https://render.com/docs/blueprint-spec

databases:
  # Database service for the FastAPI backend
  - name: inferencemd-db
    # region: frankfurt # Optional: Choose a region close to you/your users
    plan: free # Or choose a paid plan for production needs
    postgresMajorVersion: 14 # Specify PostgreSQL version
    ipAllowList: [] # Allows connections from Render services by default

services:
  # Backend Web Service (FastAPI)
  # Runs the Python backend application using the Dockerfile.
  - type: web
    name: inferencemd-backend
    runtime: docker
    plan: free
    dockerfilePath: ./backend/Dockerfile
    dockerContext: ./backend
    healthCheckPath: /api/health
    envVars:
      # Database and Core Settings
      - key: DATABASE_URL
        fromDatabase:
          name: inferencemd-db
          property: connectionString
      - key: SECRET_KEY
        generateValue: true
      - key: PYTHON_VERSION
        value: "3.10.13"
      - key: CORS_ORIGINS
        value: '["https://inferencemd-frontend.onrender.com"]'
      
      # LLM Provider Configuration
      # Set this to one of: "azure", "openai", "gemini", "deepseek"
      - key: LLM_PROVIDER
        value: "gemini"
      
      # Google Gemini Settings (when LLM_PROVIDER="gemini")
      # Note: Add your API key in the Render dashboard instead of here
      - key: GOOGLE_API_KEY
        sync: false # This will be set in the Render dashboard
      - key: LLM_MODEL_NAME
        value: "gemini-1.5-pro"
      
      # Common LLM Parameters (apply to all providers)
      - key: LLM_TEMPERATURE
        value: "0.5"
      - key: LLM_MAX_TOKENS
        value: "4096"
      - key: LLM_TIMEOUT
        value: "120"
      - key: LLM_MAX_RETRIES
        value: "2"
      
      # File Storage Settings
      - key: REPORTS_DIR
        value: "/tmp/reports"
      - key: NOTES_DIR
        value: "/tmp/notes"
      - key: STATIC_DIR
        value: "/app/static"
    # Skip the build command since migrations will be handled in the startup script
    # Database migrations should happen at runtime, not build time

  # Frontend Static Site (React)
  - type: web
    name: inferencemd-frontend
    runtime: static
    buildCommand: cd frontend && npm ci && npm run build
    staticPublishPath: frontend/build
    envVars:
      - key: CI
        value: "false"
      - key: NODE_VERSION
        value: "18"
      - key: REACT_APP_API_BASE_URL
        fromService:
          type: web
          name: inferencemd-backend
          property: host
    routes:
      - type: rewrite
        source: /*
        destination: /index.html
